pseudocode
    general rules
        given 4 character options, select 1 character, other 3 become enemies;
        hp shown under character (within character img), if hp reduced to 0, you die (lose) 
            HP can be reduced to 0 or below, can show negative HP;
        must fight other 3 characters (enemies) and reduce their hp to 0;
        attack by clicking attack button;
        once you attack, you enemy attacks as well;
        after each attack, your attack power increases - eg 1st click of attack button only hit 5, 2nd click hit 10, etc;
        enemy attack remains constant;
        attacks:
            1st character: 8 damage;
            2nd: 5 damage;
            3rd: ;
            4th: 25 damage;
        hitting attack when div.defender empty, ie no enemy selected:
            "No enemy here."
        hitting restart button resets to start screen;
        attack power increases by value of initial power, eg 1st character 1st attack 8, 2nd attack 16, etc;
        attributes:
            health points: always decrease by attack power or counter attack power, no healing;

            attack power: only for hero, increases after each click (attack) by base power, eg if base 6, attack will be 12 on next click;

            counter attack power: only for villain, power remains constant;



    html&css
        theme:
            avatar!;
            change background based on when characters battled??
        background image (avatar map);
        title, off center right: Star Wars RPG!;
        four characters (justify-content-left);
        div: "Your Character";
        div: "Enemies Available To Attack;
        div: "Fight Section";
        button: "Attack";
        div: "Defender;
        div: game info (visibility:hidden/display:none until click on Attack button)
            attack info:
                "You attacked Darth Maul for 8 damage."
                "Darth Maul attacked you back for 25 damage"

            game over:
                "You have been defeated... GAME OVER!!!"

            defeat 1 enemy:
                "You have defeated Luke Skywalker, you can choose to fight another enemy."

            click attack with no enemy in div:"defender": "No Enemy Here."
            (after defeating enemy, but perhaps also in between selecting your character and before selecting Defender);

            win: "You Won!!! GAME OVER!!!";

        button: "Restart" (shown if game over or win);

    js/jQuery
        after first click on a character (selecting your character), that character moves to div: "You Character", the other three move to div: "Enemies Available to Attack";

        all characters start off with a white border, after character selection, enemies have a red border while in div:"Enemies...", your character remains white;

        after second click (selecting enemy to fight), that character moves to div:"Defender" and gets a black border;

        after clicking on attack button, display attack info and update both characters' HP;

        game info to be displayed:

            if you lose, display game over message;

            if you defeat an enemy, display win message;

            if you defeat all enemies, ...;
        
        once enemy defeated, he/she is removed from the game;

        after selecting second enemy, game info clears;

        attack power carries over from enemy to enemy, does not reset after defeating one enemy and selecting another;

 

problem finding; problem solving

problems on deck!

    will need if loop to remove defeated characters, if hp =< 0, remove

    need to make restart button disappear at start, then reappear at game over - hero wins or hero defeated

    I wonder if there is a way to use the methods(?) from the fridge activity to dynamically create the data-hp for each character. the problem is I can't iterate over object, would need to use individual arrays and keep the attributes in specific order, eg var aang = {120, 8, 8} (hp, ap, cap)

problem 1: - solved! (see problem 1.2.1) 
move characters upon first click, chosen character moves to div.you-character, others move to div.enemies;

    solution 1:
    jQuery grab then .appendTo(), but how to I program the site to differentiate based on first and later clicks?

    solution 2: 
    use the process in fridge magnets activity, create for loop that adds hero class and villain class on first click. 

problem 1.1: - solved! (see problem 1.2.1) 
let's start by first moving ONE character.

    solution 1:
    solved, $ then appendTo.

problem 1.1.1: - solved! (see problem 1.2.1) 
click one character, move to div.your-character, move the rest to div.enemies.

    solution 1:
    test solved, using $ and appendTo. not impossible, but inefficient to manually code every combination, need for loop

problem 1.2.0: - solved! (see problem 1.2.1) 
need for loop for character selection, also need to need to differentiate based on initial first and second character click (hero and 1st villain selection), and second and third character clicks (2nd and 3rd villain selection)

what do I want to happen?
4 characters
1st click - character becomes hero, rest are villains
2nd click - choose first villain to fight
3rd click - (after first villain defeat), choose 2nd villain to fight
4th click - (after second villain defeat), choose 3rd and final villain to fight

problem 1.2.1: - solved! 
focus on solution for 1st click

    solution 1:
    using "$("body").on("click"...";
    figured out a way to add a class/id hero to character in first click;
    need to figure out a way add villain id to other 3 characters;
    testing to see if I can get the length of classes, if 3 hero, else villain;

    solution 2:
    "$("body").on("click"...", then addClass hero + removeClass character for hero, then move character class(villains) to div.enemies

problem 1.2.2:
2nd click

    solution 1:
    use 2nd "$("body").on("click"..." for 1st villain (see problem 1.2.1) 

problem 1.2.3:
3rd & 4th click

    solution 1:
    solution should be nearly identical to p1.2.2 (see problem 1.2.1), may need to reincorporate counters; 

problem 2.0:
need to figure out the fight sequence

problem 2.0.1: - solved!
how to  incorporate attributes - health points, attack power, counter attack power (see pseudocode: general rules: attributes).

    solution 1:
    attributes stored in object, after each attack click, subtract hp from other character, need object for each character

    solution 2: 
    created master object containing each character and attributes for each character, ie nested objects


problem 2.1.0:
first, bind attack button to test attributes, demo aang attacking azula, then add increasing ap,

    solution to demo: characterAttributes.azula.hp - characterAttributes.aang.ap

    solution to increasing ap: (see problem 2.1.1)

problem 2.1.1: (see p3.0)
currently using "characterAttributes.aang.hp - characterAttributes.azula.ap" format, how would I modify that to work on any character? this instead of aang? for loop that creates math .aang.hp - .azula.ap?



problem 2.1.2: - solved!
all characters have a unique id, how to I find the id based on the class, ie find id of class hero and class villain? how do I figure out which character is the hero and which is the villain?

    solution 1:
    add variable "id:<name of character>" to character in characterAttributes. this will match the #id of element!

problem 2.1.3: - solved!
upon attack-button click: get hero, get id, see which characterAttributes.<char>.id it matches, grab that info and console.log

    solution 1:
    for loop, if, attributesIndex func

problem 2.1.4: - solved!
test for loop and characterAttributes, see if I can get it to console log each attribute

    solution 1:
    cannot use for loop in combination with characterAttributes.x.x

    solution 2:
    used for loop + attributesIndex func

problem 2.1.5: - solved!
how do I check which characterAttributes.<char>.id equals $("hero").attr("id")??

    solution 1:
    iterate through characterAttributes to see if there is a match, then store that value, then feed it to a function, which then adds that value to characterAttributes.x.id and return attributes
        - fail, cannot get length of object, only string or array, which means I can't use "i < characterAttributes.length", which means I cannot iterate with for loop, also can't use characterAttributes[i/#].

         - SUCCESS, WAS ABLE TO ITERATE/USE FOR LOOP TO ACCESS VALUES OF TEST OBJECT! (see p2.1.9)

    solution 2:
    use series of if/else loops

    solution 3:
    used for loop + attributesIndex func



problem 2.1.6: - solved!
instead of storing attributes as nested object, can I can simply add them to .hero using .attr()!?!?

    solution 1:
    I can use the .att(x, y) method, but I believe I still need the values stored. solution would involve both nested object and .attr().

problem 2.1.7: - solved!
need to display hp below each character from the beginning

    solution 1:
    .attr() + characterAttributes.x.hp + .text() combo, placed at the beginning, before first character click.

problem 2.1.8: - solved!
along side character selection, I need to attach the corresponding attributes, eg hero needs ap, villain needs cap

    solution 1:
    use .attr() + characterAttributes.x.ap/cap + .text() combo;
    must be included within corresponding hero or villain click;

    solution 2:
    used for loop + attributesIndex func

problem 2.1.9: - solved!
iterate through nested object characterAttributes;

    solution 1:
    used for (cont x in y) loop;

I can access all attributes(16), but now how do I access each individual attribute, ie if I just want ozai's cap, how do I access that?

    solution 1:
    created function that takes integer (1-16) and returns attribute;


problem 3.0:
attack, counter attack sequence

what do I want to happen?

after character selection(hero in div.your-character and villain in div.defender),
after hp on characters,
after ap on hero and cap on villain,
clicking attack should do the following:

    check (counter?) how many times hero has attacked, then multiply that by his/her attack power (counter would need to start at 1 instead of 0 to reflect accurately on first attack, eg 1*8 instead of 0*8), this equals current hero ap;

    take current hp from villain and subtract current ap from hero, this equals current villain hp;

    take current hp from hero and subtract cap from villain, this equals current hero hp; 

    solution 1:
    variables to grab hero HP, hero AP (parseInt needed), and hero base AP, along with villain HP, and villain CAP;
    math to determine values after attack;
    .text() to display updated hero/villain HP;

problem 4.0
defeating villain;
picking new villain;
defeating all villains;
getting defeated by villain;
game-info;
restart button;

